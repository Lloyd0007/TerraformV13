# https://docs.aws.amazon.com/secretsmanager/latest/userguide/tutorials_basic.html


# Create a new database
# ---> CREATE DATABASE wordpress;






# Note: Mentioned below can be set as Environment Variables in ECS Task Definition for containers.



# Environment Variables   # Secret Name                         # Secrets Manager ARN
WORDPRESS_DB_HOST          WORDPRESS_DB_HOST                     arn:aws:secretsmanager:us-east-1:756733226641:secret:WORDPRESS_DB_HOST-Z8BiVD 
WORDPRESS_DB_NAME          WORDPRESS_DB_NAME                     arn:aws:secretsmanager:us-east-1:756733226641:secret:WORDPRESS_DB_NAME-5Pug4S
WORDPRESS_DB_USER          WORDPRESS_DB_USER                     arn:aws:secretsmanager:us-east-1:756733226641:secret:WORDPRESS_DB_USER-NfCMTu
WORDPRESS_DB_PASSWORD      WORDPRESS_DB_PASSWORD                 arn:aws:secretsmanager:us-east-1:756733226641:secret:WORDPRESS_DB_PASSWORD-B7Q6Uq



# Environment Variables   
WORDPRESS_DB_HOST         wordpress-db.cc8bfeb0nnvf.us-east-1.rds.amazonaws.com 
WORDPRESS_DB_NAME         wordpress
WORDPRESS_DB_USER         cloudgeeks
WORDPRESS_DB_PASSWORD     arn:aws:secretsmanager:us-east-1:108252783782:secret:dbpassword-qriMzI


wordpress-db.cc8bfeb0nnvf.us-east-1.rds.amazonaws.com





# In task Definition simply provide

WORDPRESS_DB_HOST valuesfrom  arn:aws:secretsmanager:us-east-1:756733226641:secret:WORDPRESS_DB_HOST-Z8BiVD



# AWS Secret Manager 
aws secretsmanager create-secret --name dbpassword --description "RDS Secret" --secret-string 12345678

aws secretsmanager get-secret-value --secret-id dbpassword

arn:aws:secretsmanager:us-east-1:427318149626:secret:dbpass-vPCto9

# AWS Parameter Store

---> https://docs.aws.amazon.com/cli/latest/reference/ssm/put-parameter.html

---> https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-securestring.html

Example 1: To change a parameter value

The following put-parameter example changes the value of the specified parameter.

# Secure

aws ssm put-parameter \
    --name parameter-name \
    --value "parameter-value" \
    --type SecureString
    
 aws ssm put-parameter \
    --name "dbpassword" \
    --value "12345678" \
    --type SecureString \
    --overwrite
    
    
# Unsecure

aws ssm put-parameter \
    --name "dbpassword" \
    --type "String" \
    --value "123456789999" \
    --overwrite

aws ssm get-parameters --names "dbpassword"

SSM-Parameter
arn:aws:ssm:us-east-1:427318149626:parameter/dbpassword



#### ECS ####


# aws ecs fargate can't fetch secret manager

# https://stackoverflow.com/questions/55568371/aws-ecs-fargate-cant-fetch-secret-manager

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ssm:GetParameters",
        "secretsmanager:GetSecretValue",
        "kms:Decrypt"
      ],
      "Resource": [
        "arn:aws:secretsmanager:<region>:<aws_account_id>:secret:secret_name"
      
      ]
    }
  ]
  }



# https://docs.aws.amazon.com/mediaconnect/latest/ug/iam-policy-examples-asm-secrets.html

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:ListSecretVersionIds"
            ],
            "Resource": [
                "arn:aws:secretsmanager:us-west-2:111122223333:secret:*"
            ]
        }
    ]
}


{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ssm:GetParameters",
        "secretsmanager:GetSecretValue",
        "kms:Decrypt"
      ],
      "Resource": [
        "arn:aws:ssm:<region>:<aws_account_id>:parameter/parameter_name",
        "arn:aws:secretsmanager:<region>:<aws_account_id>:secret:secret_name",
        "arn:aws:kms:<region>:<aws_account_id>:key/key_id"
      ]
    }
  ]




{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:ListSecretVersionIds"
            ],
            "Resource": [
                "*"
            ]
        }
    ]
}

############################################################ ECS Logging with Cloudwatch ########################################################

# 1 Attach Policy

#  https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-using-import-tool-cli-cloudwatch-iam-role.html





{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
            ],
            "Resource": [
                "arn:aws:logs:REGION:ACCOUNT:log-group:/aws/cognito/*"
            ]
        }
    ]    
}


# https://docs.docker.com/config/containers/logging/awslogs/

2. docker run --name eureka-server --log-driver=awslogs --log-opt awslogs-region=us-east-1 --log-opt awslogs-group="eureka-server" --log-opt awslogs-stream="eureka-server-log-stream" -p 8080:8761 --restart unless-stopped  -id imageid:tag


# http://mvpjava.com/docker-logging-symlink-hack/
# https://youtu.be/TFCua2yj09Y

3. Dockerfile best practices for logs

---> Simply create Symbolic Links

RUN ln -sf /dev/stdout /log/server.log \
 && ln -sf /dev/stderr /log/server.log



####################################################################################################################################################


Step 1: Adding the private key (PEM file) to the key chain. This allows the user to access the private instances without copying to the bastion host. This adds an additional layer of security.
#you need to run ssh-agent before using it:

# eval `ssh-agent -s`

eval "$(ssh-agent -s)"   ---> use this command

ssh-add -k <PEM_file_name>

ssh-add -L

ssh -A ec2-user@<bastion-host-elastic-ip>


#https://stackoverflow.com/questions/24154816/git-bash-could-not-open-a-connection-to-your-authentication-agent/33697306

################################################################################################################################################

# https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/create-secret.html
# https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/put-secret-value.html
# Use a JSON text string argument and specify key/value pairs


echo "[{"username":"bob"},{"password":"abc123xyz456"}]" > mycreds.json

(create new secret)
aws secretsmanager create-secret --name quickbooks2018 --description "Jason Key Value" --secret-string file://mycreds.json

(update existing secret)
aws secretsmanager put-secret-value --secret-id quickbooks2018 --secret-string file://mycreds.json
